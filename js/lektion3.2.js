//! –ü—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ arguments(–ø–æ—Ç—Ä–∏–±–µ–Ω –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞—Ä–≥—É–º–µ–Ω—Ç–∏–≤, —è–∫–∏ –º–∏ –ø–µ—Ä–µ–¥–∞—ç–º–æ –ø–∏—Å–ª—è –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü–∏–∏) –∏... 
//!Array.from (–ø–µ—Ä–µ—Ç–≤–æ—Ä—é—ç –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ –Ω–∞ –º–∞—Å–∏–≤)
// function foo(){
// // console.log(arguments);
// const args = Array.from(arguments);
// console.log(args);
// console.log(Array.isArray(args));
// }

// foo(1, 2, 3);
// foo(1, 2, 3, 4);
// foo(1, 2, 3, 4, 5);


 /**
   * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é add –¥–ª—è —Å–∫–ª–∞–¥–∞–Ω–Ω—è –¥–æ–≤—ñ–ª—å–Ω–æ—ó
   * –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ (—á–∏—Å–µ–ª)
   */

// const add = function () {
//     const args = Array.from(arguments);
//     // console.log(args);
//     let total = 0;
// for(const item of args) {
//     total +=item;
// }
// return total;
// }

// console.log(add(1, 2, 3));
// console.log(add(1, 2, 3, 4, 5, 6));


/**
   * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calAverage() —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
   * –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è. –£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
   * –±—É–¥—É—Ç—å –ª–∏—à–µ —á–∏—Å–ª–∞–º–∏.
   */

// function calAverage() {
//     let total = 0;
//     for(let i = 0; i < arguments.length; i++) {
//         total += arguments[i];
//     }
//     return total/ arguments.length;
// }

// console.log(calAverage(1, 2, 3));
// console.log(calAverage(12, 21, 32, 45, 81, 73));


//!—Å—Ç—ç–∫ –≤–∏–∫–ª–∏–∫–∏–≤, –ø–æ—Ä—è–¥–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è

// function fnA() {
//     console.log("fnA");
// }

// function fnB() {
//     console.log("fnB");
// }

// function fnC() {
//     console.log("fnC");
// }


// console.log("before fnA");
// fnA();
// console.log("after fnA");

// console.log("before fnB");
// fnB();
// console.log("after fnB");

// console.log("before fnC");
// fnC();
// console.log("after fnC");


// function bar() {
//     console.log("bar");
// }

// function baz() {
//     console.log("baz");
// }

// function foo() {
//     console.log("foo");
//     bar();
//     baz();
// }

// foo(); //—Ä–µ–∑—É–ª—å—Ç–∞—Ç foo bar baz

// function bar() {
//     baz();
//     console.log("bar");
// }

// function baz() {
//     console.log("baz");
// }

// function foo() {
//     console.log("foo");
//     bar();
//     console.log("after");

// }

// foo();

 // -------------------------------- 4
  
  /**
   * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
   * —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
   * —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
   * –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
   *
   * –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
   * —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
   */

//   function logItems(items) {
//     for(let i = 0; i < items.length; i++) {
//       console.log(`${i + 1} - ${items[i]}`);
//      }
//   }

//   console.log(logItems(["Mango", "Poly", "Ajax"]));
//   console.log(logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]));


/**
   * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å
   * —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
   * names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
   * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
   * –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
   * –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
   */

// function printInfo(names, phones) {
//    const namesArr = names.split(",");
//    const phonesArr = phones.split(",");

//    for(let i = 0; i < names.length; i++) {
//     console.log(namesArr[i], phonesArr[i]);
//    }
// }


//     printInfo(
//         "Jacob,William,Solomon,Artemis",
//         "89001234567,89001112233,890055566377,890055566300"
//       );

//       printInfo(
//         "Petya,Roma,Yura,Maks",
//         "89001234567,89001112233,890055566377,890055566300"
//       );


    /**
   * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
   * minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω
   * —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
   */
  
  
//   function formatTime(totalMinutes) {
//     const hours = Math.floor(totalMinutes / 60);
//     const minutes = totalMinutes % 60;
//     // console.log(hours);
//     // console.log(minutes);

//     const doubleDigitHours = String(hours).padStart(2, 0);
//     const doubleDigitMinutes = String(minutes).padStart(2, 0);
//     return `${doubleDigitHours}:${doubleDigitMinutes}`
//   }

//   console.log(formatTime(70));
//   console.log(formatTime(450));
//   console.log(formatTime(1441));



 // –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ —Ä–æ–∑–±–∏–≤–∞—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ 
  // –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ä–æ–∑–¥—ñ–ª—é—è—á–∏ –Ω–∞ –¥–µ–∫—ñ–ª—å–∫–∞ 
  // –º–∞—Å–∏–≤—ñ–≤.–§—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
  // 1 - –º–∞—Å–∏–≤ –∑–Ω–∞—á–µ–Ω—å
  // 2 - –ø–æ—Ç—Ä—ñ–±–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–∞ –≤ –º–∞—Å–∏–≤—ñ
  //  –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–∞—Å–∏–≤—ñ–≤


//   const data = [1, 2, 3, 4, 5, 6, 7, 8, 9];
  
//   function getCombination(arr, count) {
//      const res = [];
//      for(let i = 0; i < arr.length; i+= count) {

//      const a = arr.slice(i, i + count);
//      res.push(a);
//   }
//      return res;
//   }

//   console.log(getCombination(data, 3));
  

// function foo(min, max) {
//     let arr = [];
//     for(let i = min; i <= max; i += 2) {
//         return arr.push(i);
//         console.log(arr);
        
//     }
// }

// console.log(foo(2, 10));