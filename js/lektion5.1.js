//! --------------    CALLBACK —Ñ—É–Ω–∫—Ü–∏–∏  ----------------

// //!_____________1 –∞—Ä–≥—É–º–µ–Ω—Ç/–ø–∞—Ä–∞–º–µ—Ç—Ä -->  —Ñ—É–Ω–∫—Ü–∏—è 

// function fnA() {
//   console.log("Hello!");
// }

// function fnB() {
//   console.log("Hi");
// }

// function foo(callback) {
//   // console.log(callback);
//   callback();
// }

// //     –≤ —Ñ—É–Ω–∫—Ü–∏–∏ foo ---> callback (–∞—Ä–≥—É–º–µ–Ω—Ç/–ø–∞—Ä–∞–º–µ—Ç—Ä) —Ñ—É–Ω–∫—Ü–∏—è
// // foo(fnA)  --->  –∑–∞–ø—É—Å—Ç–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä/callback(fnA) --->  console.log("Hello!");
// // foo(fnB)  --->  –∑–∞–ø—É—Å—Ç–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä/callback(fnB) --->  console.log("Hi");

// foo(fnA);
// foo(fnB);


// //!______–∞—Ä–≥—É–º–µ–Ω—Ç/–ø–∞—Ä–∞–º–µ—Ç—Ä -->  —Ñ—É–Ω–∫—Ü–∏—è –∏ –∑–º–∏–Ω–Ω–∞

// function fnA(itytname) {
//   // console.log(itytname);
//   console.log(`Hello ${itytname}!`);
// }

// function fnB() {
//   console.log("Hi");
// }

// function foo(callback, name) {
//   // console.log(name);
//   callback(name);
// }

// foo(fnA, "Petya");

// //!______—Ñ—É–Ω–∫—Ü–∏—è callback —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä—è–º–æ –≤ "—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π" —Ñ—É–Ω–∫—Ü–∏–∏
// function calc(a, b, callback) {
//   // callback ---> —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É
//   // –º—ã –∑–∞–¥–∞–µ–º —ç—Ç–∏ 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∫–∞–∫ –ø–µ—Ä–≤—ã–µ 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
//   const result = callback(a, b);
//   console.log(result);
// }

// calc(2, 3, function(x, y) {
//   return x + y;
// });
// ! –≠—Ç–æ –∂–µ —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  // const result = (a, b, callback) => {
  //   const calc = callback(a, b);
  //   console.log(calc);
  // }
  
  // result(2, 3, (x, y) => (x + y));


//! –ó–∞–¥–∞—á–∞
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é each(array, callback), —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á–∏–∫—É—ç –º–∞—Å–∏–≤,
// –∞ –¥—Ä—É–≥–∏–º —Ñ—É–Ω–∫—Ü–∏—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É–µ—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É. –§—É–Ω–∫—Ü–∏—è 
// each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
// –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫–∞

// function each(array) {
//   const newArr = [];

//   for(const item of array) {
//     newArr.push(item * 2);
//   }
//   return newArr;
// }

// function each1(array) {
//   const newArr = [];

//   for(const item of array) {
//     newArr.push(item - 10);
//   }
//   return newArr;
// }


// console.log(each([64, 49, 36, 25, 16]));
// console.log(each1([64, 49, 36, 25, 16]));
//! –≤–º–µ—Å—Ç–æ —ç—Ç–∏—Ö –¥–≤—É—Ö —Ñ—É–Ω–∫—Ü–∏–π –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å

// function each(array, callback) {
//   const newArr = [];

//   for(const item of array) {
//     // const res = callback(item);
//     // newArr.push(res);
//     newArr.push(callback(item));
//   }
//   return newArr;
// }

// console.log(each([64, 49, 36, 25, 16], function(value){
//   return value * 2;
// }));

// console.log(each([64, 49, 36, 25, 16], function(value){
//   return value - 10;
// }));

// console.log(each([64, 49, 36, 25, 16], function(value){
//   return Math.sqrt(value);
// }));


//! –°–¢–†–ï–õ–û–ß–ù–´–ï –§–£–ù–ö–¶–ò–ò

// const addArrow = (a, b, c) => {
//   return a + b + c;
// }

// console.log(addArrow(1, 2, 3));

// rest –∏ —Å—Ç—Ä–µ–ª–∫–∞  => —Å–¥–µ–ª–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
// const addArrow = (...args) => {
//   return args;
// }

// console.log(addArrow(1, 2, 3));

// ! –ú–µ—Ç–æ–¥ forEach –¥–ª—è –º–∞—Å–∏–≤–æ–≤ (–º–µ—Ç–æ–¥ –∫–∞–∫ —Ü–∏–∫–ª) (–∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–æ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏)
// const numbers = [5, 10, 15, 20, 25];

// –∫–∞–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç (—ç–ª-—Ç –º–∞—Å—Å–∏–≤–∞, –∏–Ω–¥–µ–∫—Å, —Å–∞–º –º–∞—Å—Å–∏–≤
// numbers.forEach((number, i, arr) => {
//   console.log("number, i, arr:", number, i, arr);
// });

// –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º—É —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ
// let total = 0;
// numbers.forEach(number => total += number);
// console.log(total);


//! –ó–∞–¥–∞—á–∞ —Å –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω—ã–º–∏ —Ñ—Ä—É–∫—Ç–∞–º–∏
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥–∞ forEach

// function logItems(items) {
//     console.log(items);
//     for (let i = 0; i < items.length; i += 1) {
//       console.log(`${i + 1} - ${items[i]}`);
//     }
//   }

// const logItems = (array) => {
//   array.forEach((item, index) => {
//     console.log(`${index + 1} - ${item}`);
//   })
// }



// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);

// ! –ó–ê–î–ê–ß–ê —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞–º–∏
/**
 * –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */

// function printContactsInfo({ names, phones }) {
//   const namesArr = names.split(",");
//   const phonesArr = phones.split(",");
//   for (let i = 0; i < namesArr.length; i += 1) {
//     console.log(`${namesArr[i]}: ${phonesArr[i]}`);
//   }
// }

// const printContactsInfo = (obj) => {
//   //! --- split() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –º–∞—Å—Å–∏–≤ –ø–æ–¥—Å—Ç—Ä–æ–∫ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é 
//   const namesArr = obj.names.split(",");
//   const phonesArr = obj.phones.split(",");


// //! --- forEach() –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// namesArr.forEach((item, i) => {
//   console.log(`${item}: ${phonesArr[i]}`);
// })
// }

// printContactsInfo({
//   names: "Jacob,William,Solomon,Artemis",
//   phones: "89001234567,89001112233,890055566377,890055566300",
// });

const allCars = [
    { make: "Honda", model: "CR-V", amount: 14, price: 24045 },
    { make: "Honda", model: "Accord", amount: 2, price: 22455 },
    { make: "Mazda", model: "Mazda 6", amount: 8, price: 24195 },
    { make: "Mazda", model: "CX-9", amount: 7, price: 31520 },
    { make: "Toyota", model: "4Runner", amount: 19, price: 34210 },
    { make: "Toyota", model: "Sequoia", amount: 16, price: 45560 },
    { make: "Toyota", model: "Tacoma", amount: 4, price: 24320 },
    { make: "Ford", model: "F-150", amount: 11, price: 27110 },
    { make: "Ford", model: "Fusion", amount: 13, price: 22120 },
    { make: "Ford", model: "Explorer", amount: 6, price: 31660 },
];

// // —Å–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
// const getModels = (cars) => cars.map (car => car.model);

// console.log(getModels(allCars));

// –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–∫–∏–¥–∫—É –≤ –ø—Ä–∞–π—Å–µ –∫ –∫–∞–∂–¥–æ–π –º–∞—à–∏–Ω–µ

/**
 * –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è makeCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —ñ–∑ –∑–º—ñ–Ω–Ω–∏–º
 * –∑–Ω–∞—á–µ–Ω–Ω—è–º –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ—Ä–µ–¥–∞–Ω–æ—ó –∑–Ω–∏–∂–∫–∏.
 */

// const makeCarsDiscount = (cars, discount) => {
//   return cars.map(car => ({...car, price: car.price * (1 - discount)}));
// }
// console.table(makeCarsDiscount(allCars, 0.2));



// const players = [
//     { id: "player-1", name: "Mango", timePlayed: 310, points: 54, online: false },
//     { id: "player-2", name: "Poly", timePlayed: 470, points: 92, online: true },
//     { id: "player-3", name: "Kiwi", timePlayed: 230, points: 48, online: true },
//     { id: "player-4", name: "Ajax", timePlayed: 150, points: 71, online: false },
//     { id: "player-5", name: "Chelsy", timePlayed: 80, points: 48, online: true },
// ];
  
// /*
// * –ó–±—ñ–ª—å—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω –≥—Ä–∞–≤—Ü—è –∑–∞ id
// */
// const playerIdToUpdate = "player-3";

// const newArr = players.map(player => {
//   if (player.id === playerIdToUpdate) {
//     return {
//       ...player,
//       timePlayed: player.timePlayed + 100
//     }
//   }
//   return player;
// })

// console.table(newArr);


//! –†–ê–ó–ù–ò–¶–ê –ú–ï–ñ–î–£ –ú–ï–¢–û–î–û–ú map() –∏ Flatmap()
// const tweets = [ 
//   {id: "000", likes: 5, tags: ["js", "nodejs"]},
//   { id: "001", likes: 2, tags: ["html", "css"] },
//   { id: "002", likes: 17, tags: ["html", "js", "nodejs"] },
//   { id: "003", likes: 8, tags: ["css", "react"] },
//   { id: "004", likes: 0, tags: ["js", "nodejs", "react"] },
// ];

// const tags = tweets.map(tweet => tweet.tags);
// const tags1 = tweets.flatMap(tweet => tweet.tags);

// console.log("–º–µ—Ç–æ–¥ map", tags);
// console.log("–º–µ—Ç–æ–¥ flatMap", tags1);

// function foo(a,b) {
//   const lalala = Math.random();
//   return (a +b) * lalala;
// }


// console.log(foo(5, 10));
